services:
  database:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=test
    when:
      event: [tag,push]
      branch: publici

pipeline:
  assets_precompile:
    image: ruby:2.4.5
    environment:
      DATABASE_URL: postgres://postgres@database/test
      RACK_ENV: production
      RAILS_ENV: production
    commands:
      - bundle install
      - bundle exec rake assets:precompile assets:clean
    when:
      event: [tag,push]
      branch: publici

  build:
    image: plugins/docker
    secrets: [ docker_username, docker_password ]
    repo: publicintegrity/klaxon
    tags: 
      - ${DRONE_COMMIT_SHA:0:12}
      - latest
    when:
      event: [push,tag]
      branch: publici

  helm_dry_run:
    image: publicintegrity/drone-helm
    chart: ./charts/klaxon
    release: klaxon
    environment:
      - IMAGE_TAG=${DRONE_COMMIT_SHA:0:12}
    values: image.repository=publicintegrity/klaxon,image.tag=$${IMAGE_TAG},admin_emails=$${ADMIN_EMAILS},database_url=$${DATABASE_URL},secret_key_base=$${SECRET_KEY_BASE},ses_password=$${SES_PASSWORD},ses_username=$${SES_USERNAME}
    prefix:
    dry_run: true
    namespace: klaxon
    secrets: [ api_server, kubernetes_token, admin_emails, database_url, secret_key_base, ses_password, ses_username ]
    skip_tls_verify: true
    when:
      event: [tag,push]
      branch: publici

  helm_deploy:
    image: publicintegrity/drone-helm
    chart: ./charts/klaxon
    release: klaxon
    environment:
      - IMAGE_TAG=${DRONE_COMMIT_SHA:0:12}
    values: image.repository=publicintegrity/klaxon,image.tag=$${IMAGE_TAG},admin_emails=$${ADMIN_EMAILS},database_url=$${DATABASE_URL},secret_key_base=$${SECRET_KEY_BASE},ses_password=$${SES_PASSWORD},ses_username=$${SES_USERNAME}
    prefix:
    namespace: klaxon
    secrets: [ api_server, kubernetes_token, admin_emails, database_url, secret_key_base, ses_password, ses_username ]
    skip_tls_verify: true
    when:
      event: deployment
      environment: production

  slack:
    image: plugins/slack
    secrets: [ slack_webhook ]
    when:
      status: [ success, failure ]
